#!/usr/bin/perl -w

use vars qw(@PIKA);

Irssi::settings_add_str(SCRIPT_NAME, 'pikafile', COMPONENT_DIRECTORY . '/pika.tsv');

'!(?i:pika(?:chu)?)' => sub {
	my ($trigger, $message, $nick, $address, $target, $server) = @_;

	defined($target) or do {
		my ($channel) = split(/\s+/, $message, 2);

		if ($channel =~ /^(?:&|#)/o) {
			$target = $channel;
			$server->command("msg $nick Pikachu!");
		} else {
			$target = $nick;
		}
	};

	@PIKA > 0 or do {
		my $pikafile = Irssi::settings_get_str('pikafile');

		open(PKA, "<$pikafile") or do {
			$server->command("msg $target Pika-pi... ;~;");
			return (0, $trigger, undef, undef, $nick, $address, $target, $server);
		};

		while (<PKA>) {
			chomp;
			foreach my $p (split /\t+/) {
				length($p) and do {
					$p =~ s/\s+/ /go;
					push(@PIKA, $p);
				};
			}
		}

		@PIKA > 0 or do {
			$server->command("msg $target Pi-pikachu... ;~;");
			return (0, $trigger, undef, undef, $nick, $address, $target, $server);
		};

		for (my $i = @PIKA; --$i; ) {
			my $j = int(rand($i + 1));

			$i == $j and
				next;

			@PIKA[$i, $j] = @PIKA[$j, $i];
		}
	};

	my $pika = rand() > rand() ? pop(@PIKA) : shift(@PIKA); # haha, why not?
	$server->command("msg $target $pika");

	return (1, $trigger, $pika, scalar @PIKA, $nick, $address, $target, $server);
}
